<?xml version="1.0"?>
<!DOCTYPE overlay SYSTEM "chrome://colorchecker/locale/colorchecker.dtd">
<?xml-stylesheet href="chrome://colorchecker/content/overlay/colorchecker.css" type="text/css"?>
<?xml-stylesheet href="chrome://colorchecker/skin/colorchecker.css" type="text/css"?>
<?xml-stylesheet href="chrome://colorchecker/content/css/overlay.css" type"text/css" ?>

<overlay id="colorchecker_niquelao"
         xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
	<script type="application/x-javascript" src="chrome://colorchecker/content/overlay.js"/>
	<script type="application/x-javascript" src="chrome://colorchecker/content/niq_color.js"/>
	<script type="application/x-javascript" src="chrome://colorchecker/content/niq_documents.js" />
	<script type="application/x-javascript" src="chrome://colorchecker/content/niq_xpath.js" />
	
	<toolbarpalette id="BrowserToolbarPalette">
	  <toolbarbutton id="colorchecker-button" class="toolbarbutton-1" key="key_colorchecker_open"
		label="Contrast Checker" tooltiptext="&colorchecker_niquelao.title;"
		oncommand="toggleSidebar('viewcolorchecker_niquelao');" />
	</toolbarpalette>
	  <menupopup id="menu_ToolsPopup">
		<menuitem observes="viewcolorchecker_niquelao"	key="key_colorchecker_open"/>
	  </menupopup>
	  <menupopup id="viewSidebarMenu">
		<menuitem observes="viewcolorchecker_niquelao"	key="key_colorchecker_open"/>
	  </menupopup>
	<popup id="contentAreaContextMenu">
		<menuitem  label="&colorchecker_niquelao.title;" observes="viewcolorchecker_niquelao"/>
	</popup>
		<keyset>
			<key id="key_colorchecker_open" command="viewcolorchecker_niquelao" key="&colorchecker.commandkey;" modifiers="&colorchecker_open.modifierskey;" />
		</keyset>
		<broadcasterset id="mainBroadcasterSet"> 
			<broadcaster key="key_colorchecker_open" id="viewcolorchecker_niquelao" 
					 label="&colorchecker_niquelao.title;"
					 autoCheck="false"
					 type="checkbox"
					 group="sidebar"
					 sidebarurl="chrome://colorchecker/content/colorcheckersidebar.xul"
					 sidebartitle="&colorchecker_niquelao.title;"
					 oncommand="toggleSidebar('viewcolorchecker_niquelao');" />
		</broadcasterset>
		<statusbar id="status-bar">
			<statusbarpanel position="1" onmousedown="toggleSidebar('viewcolorchecker_niquelao');">
				<box id="perfilcolorchecker" />
			</statusbarpanel>
		</statusbar>
	<script type="text/javascript">
	<![CDATA[
	var rumoColorChecker_bio_Obs = {
		sideB : window.document.getElementById("sidebar-box"),
		MutationObserver : window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver,
	}
			rumoColorChecker_bio_Obs.observer = new rumoColorChecker_bio_Obs.MutationObserver(function(mutations) {
				mutations.forEach(function(mutation) {
					if (mutation.type === 'attributes') {
						if((rumoColorChecker_bio_Obs.sideB.getAttribute('collapsed') =='true') || (rumoColorChecker_bio_Obs.sideB.getAttribute('sidebarcommand') == 'viewcolorchecker_niquelao')){
								
							var documentos = bio_documents_colorCheck.documents();
							for (var doc_number = 0; doc_number < documentos.length; doc_number++) {
								if(documentos[doc_number].getElementsByTagName('body')[0]){
									var base = documentos[doc_number].getElementsByTagName('body')[0];
								}
								if(base){
									if(documentos[doc_number].getElementById('prog_colorCheck'))
										documentos[doc_number].getElementById('prog_colorCheck').parentNode.removeChild(documentos[doc_number].getElementById('prog_colorCheck'));

									var cadXpath = '//canvas[contains(@class,"bio_canvas_disc")]';
									var elementos = bio_niq_xpath_colorCheck.resuelvexpath(documentos[doc_number],cadXpath);
									for (var i = elementos.length - 1; i >= 0; i--) {
										elementos[i].parentNode.removeChild(elementos[i]);
									}
									cadXpath = '//head/following::*[ ';
									cadXpath += 'not(@type = "hidden") and not(@type = "HIDDEN") ';
									cadXpath += 'and not(@id = "prog_colorCheck") and not(./parent[@id = "prog_colorCheck"]) ';
									cadXpath += 'and not(name() = "SCRIPT") and not(name() = "NOSCRIPT") and not(./ancestor::*[name() = "NOSCRIPT"]) ';
									cadXpath += 'and not(name() = "HR") and not(name() = "PARAM") and not(name() = "OBJECT") ';
									cadXpath += 'and not(name() = "STYLE") and not(name() = "TITLE") ';
									cadXpath += 'and not(name() = "EMBED") and not(name() = "IFRAME") and not(name() = "FRAMESET") ';
									cadXpath += 'and count(./ancestor::object) = 0 ';
									cadXpath += ']';
									var elementos = bio_niq_xpath_colorCheck.resuelvexpath(documentos[doc_number],cadXpath);
									for (var i = 0; i < elementos.length; i++) {
										try{
											if(elementos[i].getAttribute('bio_style')){
												if(elementos[i].getAttribute('bio_style') == 'false'){
													elementos[i].removeAttribute('bio_style');
													if(elementos[i].getAttribute('style'))
														elementos[i].removeAttribute('style');
													if(elementos[i].getAttribute('bio_style_img_fore')){
														elementos[i].setAttribute('src', elementos[i].getAttribute('bio_style_img_fore'));
														elementos[i].removeAttribute('bio_style_img_fore');
													}
													if(elementos[i].getAttribute('bio_style_f')){
														elementos[i].removeAttribute('bio_style_f');
													}
													if(elementos[i].getAttribute('bio_style_b')){
														elementos[i].removeAttribute('bio_style_b');
													}
													if(elementos[i].getAttribute('bio_style_b-t')){
														elementos[i].removeAttribute('bio_style_b-t');
													}
													if(elementos[i].getAttribute('bio_style_b-r')){
														elementos[i].removeAttribute('bio_style_b-r');
													}
													if(elementos[i].getAttribute('bio_style_b-b')){
														elementos[i].removeAttribute('bio_style_b-b');
													}
													if(elementos[i].getAttribute('bio_style_b-l')){
														elementos[i].removeAttribute('bio_style_b-l');
													}
													if(elementos[i].getAttribute('bio_style_img')){
														elementos[i].removeAttribute('bio_style_img');
													}

													if(elementos[i].getAttribute('bio_style_img-after')){
														elementos[i].removeAttribute('bio_style_img-after');
													}
													if(elementos[i].getAttribute('bio_style_img-before')){
														elementos[i].removeAttribute('bio_style_img-before');
													}
												}else{
													if(elementos[i].getAttribute('bio_style_f')){
														elementos[i].style.setProperty('color', elementos[i].getAttribute('bio_style_f'), 'important');
														elementos[i].removeAttribute('bio_style_f');
													}
													if(elementos[i].getAttribute('bio_style_b')){
														elementos[i].style.setProperty('background-color', elementos[i].getAttribute('bio_style_b'), 'important');
														elementos[i].removeAttribute('bio_style_b');
													}
													if(elementos[i].getAttribute('bio_style_b-t')){
														elementos[i].style.setProperty('border-top-color', elementos[i].getAttribute('bio_style_b-t'), 'important');
														elementos[i].removeAttribute('bio_style_b-t');
													}
													if(elementos[i].getAttribute('bio_style_b-r')){
														elementos[i].style.setProperty('border-right-color', elementos[i].getAttribute('bio_style_b-r'), 'important');
														elementos[i].removeAttribute('bio_style_b-r');
													}
													if(elementos[i].getAttribute('bio_style_b-b')){
														elementos[i].style.setProperty('border-bottom-color', elementos[i].getAttribute('bio_style_b-b'), 'important');
														elementos[i].removeAttribute('bio_style_b-b');
													}
													if(elementos[i].getAttribute('bio_style_b-l')){
														elementos[i].style.setProperty('border-left-color', elementos[i].getAttribute('bio_style_b-l'), 'important');
														elementos[i].removeAttribute('bio_style_b-l');
													}
													if(elementos[i].getAttribute('bio_style_bs')){
														elementos[i].style.setProperty('box-shadow', elementos[i].getAttribute('bio_style_bs'), 'important');
														elementos[i].removeAttribute('bio_style_bs');
													}
													if(elementos[i].getAttribute('bio_style_img')){
														elementos[i].setAttribute('background-image', elementos[i].getAttribute('bio_style_img'));
														elementos[i].removeAttribute('bio_style_img');
													}
													if(elementos[i].getAttribute('bio_style_img_fore')){
														elementos[i].setAttribute('src', elementos[i].getAttribute('bio_style_img_fore'));
														elementos[i].removeAttribute('bio_style_img_fore');
													}

													if(elementos[i].getAttribute('bio_style_img-after')){
														elementos[i].setAttribute('background-image', elementos[i].getAttribute('bio_style_img-after'));
														elementos[i].removeAttribute('bio_style_img-after');
													}
													if(elementos[i].getAttribute('bio_style_img-before')){
														elementos[i].setAttribute('background-image', elementos[i].getAttribute('bio_style_img-before'));
														elementos[i].removeAttribute('bio_style_img-before');
													}
													if(elementos[i].getAttribute('bio_style_img_fore')){
														elementos[i].setAttribute('src', elementos[i].getAttribute('bio_style_img_fore'));
														elementos[i].removeAttribute('bio_style_img_fore');
													}
												}
												if(elementos[i].getAttribute('bio_img_cross')){
													elementos[i].setAttribute('crossorigin',elementos[i].getAttribute('bio_img_cross'));
													elementos[i].removeAttribute('bio_img_cross');
												}
												elementos[i].removeAttribute('bio_style');
											}
											if(elementos[i].getAttribute('class'))
												elementos[i].setAttribute('class',elementos[i].getAttribute('class').replace('bio_canvas',''));
										} catch (e) {
										}						
									}
								}
							}
						}
					}
				});
			});
			rumoColorChecker_bio_Obs.observer.observe(rumoColorChecker_bio_Obs.sideB, {
				attributes: true, 
				childList: true, 
				characterData: true 
			});

	]]>
	</script>
</overlay>
